{
  "paths": {
    "/form/2/{account_id}/{form_id}": {
      "post": {
        "tags": [
          "Form"
        ],
        "description": "Create a new form record",
        "summary": "Create a new form record",
        "parameters": [
          {
            "name": "account_id",
            "in": "path",
            "description": "This is your Kissflow <<glossary:Account ID>>",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "form_id",
            "in": "path",
            "description": "The <<glossary:Form ID>> is a unique identifier for each form",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Request payload to create a new form record <br /> Name - `Key` column value of the form. It is a unique string that identifies the record you are trying to create in the form. It is a mandatory parameter<br /> Field1 - Value to be added in the `Field1` column in the form",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "Name": {
                    "type": "string"
                  },
                  "Field1": {
                    "type": "string"
                  }
                },
                "example": {
                  "Name": 10,
                  "Field1": "Blackwidow"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Added the form record successfully"
          }
        },
        "security": [
          {
            "X-Api-Key": []
          },
          {
            "X-Access-Key-Id": []
          },
          {
            "X-Access-Key-Secret": []
          }
        ]
      },
      "delete": {
        "tags": [
          "Form"
        ],
        "description": "Delete a specific form record",
        "summary": "Delete a specific form record",
        "parameters": [
          {
            "name": "account_id",
            "in": "path",
            "description": "This is your Kissflow <<glossary:Account ID>>",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "form_id",
            "in": "path",
            "description": "The <<glossary:Form ID>> is a unique identifier for each form",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Deleted the form record successfully"
          }
        },
        "security": [
          {
            "X-Api-Key": []
          },
          {
            "X-Access-Key-Id": []
          },
          {
            "X-Access-Key-Secret": []
          }
        ]
      },
      "put": {
        "tags": [
          "Form"
        ],
        "description": "Update an existing form record",
        "summary": "Update an existing form record",
        "parameters": [
          {
            "name": "account_id",
            "in": "path",
            "description": "This is your Kissflow <<glossary:Account ID>>",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "form_id",
            "in": "path",
            "description": "The <<glossary:Form ID>> is a unique identifier for each form",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Request payload to update a form record <br /> Name - `Key` column value of the form. It is a unique string that identifies the record you are trying to update in the form. It is a mandatory parameter<br /> Field1 - Value to be updated in the `Field1` column in the form",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "Name": {
                    "type": "string"
                  },
                  "Field1": {
                    "type": "string"
                  }
                },
                "example": {
                  "Name": 10,
                  "Field1": "Blackwidow"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Updated the form record successfully"
          }
        },
        "security": [
          {
            "X-Api-Key": []
          },
          {
            "X-Access-Key-Id": []
          },
          {
            "X-Access-Key-Secret": []
          }
        ]
      },
      "get": {
        "tags": [
          "Form"
        ],
        "description": "Get an existing form record",
        "summary": "Get an existing form record",
        "parameters": [
          {
            "name": "account_id",
            "in": "path",
            "description": "This is your Kissflow <<glossary:Account ID>>",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "form_id",
            "in": "path",
            "description": "The <<glossary:Form ID>> is a unique identifier for each form",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Name",
            "in": "query",
            "description": "Key column value of the form. It is a unique string that identifies the record you are trying to fetch from the form. It is a mandatory parameter<br />",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Get Instance by the instance name(key field)"
          }
        },
        "security": [
          {
            "X-Api-Key": []
          },
          {
            "X-Access-Key-Id": []
          },
          {
            "X-Access-Key-Secret": []
          }
        ]
      }
    },
    "/form/2/{account_id}/{form_id}/{instance_id}": {
      "delete": {
        "tags": [
          "Form"
        ],
        "description": "This endpoint lets you delete an item from the form flow.",
        "summary": "Delete an Item",
        "parameters": [
          {
            "name": "account_id",
            "in": "path",
            "description": "This is your Kissflow <<glossary:Account ID>>, and is a mandatory parameter.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "form_id",
            "in": "path",
            "description": "Your Kissflow Form id. This is a mandatory parameter.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "instance_id",
            "in": "path",
            "description": "ID of the item to be deleted",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Delete a specific item",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "_id": {
                      "type": "string",
                      "description": "The Instance Id."
                    },
                    "_is_deleted": {
                      "type": "boolean",
                      "description": "Deletion status of the item"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "The specified item could not be found to be deleted.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DefaultErrorSchema"
                }
              }
            }
          }
        },
        "security": [
          {
            "X-Api-Key": []
          },
          {
            "X-Access-Key-Id": []
          },
          {
            "X-Access-Key-Secret": []
          }
        ]
      },
      "get": {
        "tags": [
          "Form"
        ],
        "description": "This endpoint lets you retrieve all the details of an item.",
        "summary": "Retrieve all item details",
        "parameters": [
          {
            "name": "account_id",
            "in": "path",
            "description": "Your Kissflow <<glossary:Account ID>>. This is a mandatory parameter.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "form_id",
            "in": "path",
            "description": "Your Kissflow Form id. This is a mandatory parameter.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "instance_id",
            "in": "path",
            "description": "Your unique instance id. This is a mandatory parameter.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "This request retrieves all the details of a specific item.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetItem"
                }
              }
            }
          },
          "404": {
            "description": "The specified item could not be found.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DefaultErrorSchema"
                }
              }
            }
          }
        },
        "security": [
          {
            "X-Api-Key": []
          },
          {
            "X-Access-Key-Id": []
          },
          {
            "X-Access-Key-Secret": []
          }
        ]
      },
      "put": {
        "tags": [
          "Form"
        ],
        "description": "This endpoint lets you update the form item values.",
        "summary": "Update values of the form item.",
        "parameters": [
          {
            "name": "account_id",
            "in": "path",
            "description": "This is your Kissflow <<glossary:Account ID>>, and is a mandatory parameter.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "form_id",
            "in": "path",
            "description": "Your Kissflow Form id. This is a mandatory parameter.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "instance_id",
            "in": "path",
            "description": "Your Kissflow Instance id. This is a mandatory parameter.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Request payload to update the visited status of the form item.",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "field1": {
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "updated an item successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "_modified_at": {
                      "type": "string",
                      "description": "Value modification timestamp"
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "X-Api-Key": []
          },
          {
            "X-Access-Key-Id": []
          },
          {
            "X-Access-Key-Secret": []
          }
        ]
      }
    },
    "/form/2/{account_id}/{form_id}/batch/delete": {
      "post": {
        "tags": [
          "Form"
        ],
        "description": "This endpoint lets you delete multiple items from the form flow.",
        "summary": "Delete multiple form items",
        "parameters": [
          {
            "name": "account_id",
            "in": "path",
            "description": "This is your Kissflow <<glossary:Account ID>>, and is a mandatory parameter.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "form_id",
            "in": "path",
            "description": "Your Kissflow Form id. This is a mandatory parameter.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Request payload to delete multiple form items <br /> _id - instance id of the form items",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "_id": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Delete multiple form items",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "_id": {
                        "type": "string",
                        "description": "The Instance Id."
                      },
                      "_is_deleted": {
                        "type": "boolean",
                        "description": "Deletion status of the item"
                      }
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "The specified item could not be found to be deleted.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DefaultErrorSchema"
                }
              }
            }
          }
        },
        "security": [
          {
            "X-Api-Key": []
          },
          {
            "X-Access-Key-Id": []
          },
          {
            "X-Access-Key-Secret": []
          }
        ]
      }
    },
    "/form/2/{account_id}/{form_id}/list": {
      "get": {
        "tags": [
          "Form"
        ],
        "description": "This endpoint lets you retrieve all the items of a form.",
        "summary": "Get form records",
        "parameters": [
          {
            "name": "account_id",
            "in": "path",
            "description": "This is your Kissflow <<glossary:Account ID>>, and is a mandatory parameter.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "form_id",
            "in": "path",
            "description": "Your Kissflow Form id. This is a mandatory parameter.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "This request retrieves all the items of a specified form flow.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GRIDDataResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "X-Api-Key": []
          },
          {
            "X-Access-Key-Id": []
          },
          {
            "X-Access-Key-Secret": []
          }
        ]
      }
    },
    "/form/2/{account_id}/{form_id}/{instance_id}/submit": {
      "post": {
        "tags": [
          "Form"
        ],
        "description": "This endpoint lets you submit the form item.",
        "summary": "Submit the form item.",
        "parameters": [
          {
            "name": "account_id",
            "in": "path",
            "description": "This is your Kissflow <<glossary:Account ID>>, and is a mandatory parameter.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "form_id",
            "in": "path",
            "description": "Your Kissflow Form id. This is a mandatory parameter.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "instance_id",
            "in": "path",
            "description": "Your Kissflow Instance id. This is a mandatory parameter.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Form item submitted successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "_modified_at": {
                      "type": "string",
                      "description": "Value modification timestamp"
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "X-Api-Key": []
          },
          {
            "X-Access-Key-Id": []
          },
          {
            "X-Access-Key-Secret": []
          }
        ]
      }
    },
    "/form/2/{account_id}/{form_id}/{instance_id}/visited": {
      "put": {
        "tags": [
          "Form"
        ],
        "description": "This endpoint lets you update the visited status of the form item.",
        "summary": "Update visited status of the form item.",
        "parameters": [
          {
            "name": "account_id",
            "in": "path",
            "description": "This is your Kissflow <<glossary:Account ID>>, and is a mandatory parameter.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "form_id",
            "in": "path",
            "description": "Your Kissflow Form id. This is a mandatory parameter.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "instance_id",
            "in": "path",
            "description": "Your Kissflow Instance id. This is a mandatory parameter.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Updated item as visited",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "_visited": {
                      "type": "boolean",
                      "description": "Visited status of the instance id."
                    },
                    "_modified_at": {
                      "type": "string",
                      "description": "Visited status modification timestamp"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "The specified item could not be found to be deleted.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DefaultErrorSchema"
                }
              }
            }
          }
        },
        "security": [
          {
            "X-Api-Key": []
          },
          {
            "X-Access-Key-Id": []
          },
          {
            "X-Access-Key-Secret": []
          }
        ]
      }
    },
    "/form/2/{account_id}/{form_id}/fields": {
      "get": {
        "tags": [
          "Form"
        ],
        "description": "Get Field list of form",
        "summary": "Get Field list of form",
        "parameters": [
          {
            "name": "account_id",
            "in": "path",
            "description": "ID of account",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "form_id",
            "in": "path",
            "description": "ID of form",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "List Field in Form",
            "content": {
              "application/json": {
                "schema": {
                  "type": "Json",
                  "$ref": "#/components/schemas/Field"
                }
              }
            }
          }
        },
        "security": [
          {
            "X-Api-Key": []
          },
          {
            "X-Access-Key-Id": []
          },
          {
            "X-Access-Key-Secret": []
          }
        ]
      }
    },
    "/form/2/{account_id}/{form_id}/count": {
      "get": {
        "tags": [
          "Form"
        ],
        "description": "This endpoint lets you retrieve unvisited and total submissions for a form flow.",
        "summary": "Retrieve unvisited and total submissions for a form flow",
        "parameters": [
          {
            "name": "account_id",
            "in": "path",
            "description": "Your Kissflow <<glossary:Account ID>>. This is a mandatory parameter.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "form_id",
            "in": "path",
            "description": "Your Kissflow Form id. This is a mandatory parameter.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "This request retrieves all the details of a specific item.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "unvisited": {
                      "type": "integer",
                      "description": "count of unvisited form items in the given form id"
                    },
                    "submissions": {
                      "type": "integer",
                      "description": "total submissions of form items in the given form id"
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "X-Api-Key": []
          },
          {
            "X-Access-Key-Id": []
          },
          {
            "X-Access-Key-Secret": []
          }
        ]
      }
    },
    "/form/2/{account_id}/{form_id}/{instance_id}/{field_id}/lookup": {
      "get": {
        "tags": [
          "Form"
        ],
        "description": "Lookup Data for a reference field",
        "summary": "Retrieve data for a lookup field from a reference field",
        "parameters": [
          {
            "name": "account_id",
            "in": "path",
            "description": "ID of account",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "form_id",
            "in": "path",
            "description": "ID of form or view",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "instance_id",
            "in": "path",
            "description": "Instance ID for the specific form or view",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "field_id",
            "in": "path",
            "description": "ID of field needs lookup data",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "q",
            "in": "query",
            "description": "The search filter string",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Lookup Data for a reference field",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LookupResponseOfAInstance"
                }
              }
            }
          }
        },
        "security": [
          {
            "X-Api-Key": []
          },
          {
            "X-Access-Key-Id": []
          },
          {
            "X-Access-Key-Secret": []
          }
        ]
      }
    },
    "/form/2/{account_id}/{form_id}/lookup": {
      "get": {
        "tags": [
          "Form"
        ],
        "description": "Lookup data from other services",
        "summary": "Retrieve lookup data from other services",
        "parameters": [
          {
            "name": "account_id",
            "in": "path",
            "description": "ID of account",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "form_id",
            "in": "path",
            "description": "ID of form view",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Lookup data from other services",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LookupResponseOfAInstance"
                }
              }
            }
          }
        },
        "security": [
          {
            "X-Api-Key": []
          },
          {
            "X-Access-Key-Id": []
          },
          {
            "X-Access-Key-Secret": []
          }
        ]
      }
    },
    "/form/2/{account_id}/{form_id}/lookup/fields": {
      "get": {
        "tags": [
          "Form"
        ],
        "description": "Get Field list of Form",
        "summary": "List all the fields in form",
        "parameters": [
          {
            "name": "account_id",
            "in": "path",
            "description": "ID of account",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "form_id",
            "in": "path",
            "description": "ID of form",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "List Field in Form",
            "content": {
              "application/json": {
                "schema": {
                  "type": "Json",
                  "$ref": "#/components/schemas/Field"
                }
              }
            }
          }
        },
        "security": [
          {
            "X-Api-Key": []
          },
          {
            "X-Access-Key-Id": []
          },
          {
            "X-Access-Key-Secret": []
          }
        ]
      }
    },
    "/form/2/{account_id}/{form_id}/{field_id}/isempty": {
      "get": {
        "tags": [
          "Form"
        ],
        "description": "Create New Unique key constraint for field",
        "parameters": [
          {
            "name": "account_id",
            "in": "path",
            "description": "ID of account",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "form_id",
            "in": "path",
            "description": "ID of form",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "field_id",
            "in": "path",
            "description": "ID of field in form",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Response for successful creation of Unique Key constraint",
            "content": {
              "application/json": {
                "schema": {
                  "type": "Json",
                  "$ref": ""
                }
              }
            }
          }
        }
      }
    },
    "/form/2/{account_id}/{form_id}/{row_id}/{field_id}/attachment": {
      "post": {
        "tags": [
          "Form"
        ],
        "description": "This endpoint lets you upload file to an attachment field in row.",
        "summary": "Add attachment",
        "parameters": [
          {
            "name": "account_id",
            "in": "path",
            "description": "This is your Kissflow <<glossary:Account ID>>, and is a mandatory parameter.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "form_id",
            "in": "path",
            "description": "The <<glossary:Form ID>> is a unique identifyer for each form, and is a mandatory parameter.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "row_id",
            "in": "path",
            "description": "The <<glossary:Row ID>> is a unique identifyer for each row, and is a mandatory parameter.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "field_id",
            "in": "path",
            "description": "The <<glossary:Field ID>> is a unique identifyer for each field, and is a mandatory parameter.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "The file to upload.",
          "required": true,
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "string",
                "format": "binary"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "This request successfully adds a new attachment to your form field.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BatchUpdateResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "X-Api-Key": []
          },
          {
            "X-Access-Key-Id": []
          },
          {
            "X-Access-Key-Secret": []
          }
        ]
      }
    },
    "/form/2/{account_id}/{form_id}/{row_id}/{field_id}/image": {
      "post": {
        "tags": [
          "Form"
        ],
        "description": "This endpoint lets you upload image to field in row.",
        "summary": "Add image file",
        "parameters": [
          {
            "name": "account_id",
            "in": "path",
            "description": "This is your Kissflow <<glossary:Account ID>>, and is a mandatory parameter.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "form_id",
            "in": "path",
            "description": "The <<glossary:Form ID>> is a unique identifyer for each form, and is a mandatory parameter.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "row_id",
            "in": "path",
            "description": "The <<glossary:Row ID>> is a unique identifyer for each row, and is a mandatory parameter.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "field_id",
            "in": "path",
            "description": "The <<glossary:Field ID>> is a unique identifyer for each field, and is a mandatory parameter.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "The file to upload.",
          "required": true,
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "string",
                "format": "binary"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "This request successfully adds a new image file to your form field.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BatchUpdateResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "X-Api-Key": []
          },
          {
            "X-Access-Key-Id": []
          },
          {
            "X-Access-Key-Secret": []
          }
        ]
      },
      "get": {
        "tags": [
          "Form"
        ],
        "description": "This endpoint lets you download an image from a form field.",
        "summary": "Download image from form",
        "parameters": [
          {
            "name": "account_id",
            "in": "path",
            "description": "This is your Kissflow <<glossary:Account ID>>, and is a mandatory parameter.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "form_id",
            "in": "path",
            "description": "The <<glossary:Form ID>> is a unique identifyer for each form, and is a mandatory parameter.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "row_id",
            "in": "path",
            "description": "The <<glossary:Row ID>> is a unique identifyer for each row, and is a mandatory parameter.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "field_id",
            "in": "path",
            "description": "The <<glossary:Field ID>> is a unique identifyer for each field, and is a mandatory parameter.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "This request successfully downloads an image from your form field.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              }
            }
          },
          "403": {
            "description": "The request to download an image from a form field could not be processed due to insufficient permissions.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DefaultErrorSchema"
                }
              }
            }
          }
        },
        "security": [
          {
            "X-Api-Key": []
          },
          {
            "X-Access-Key-Id": []
          },
          {
            "X-Access-Key-Secret": []
          }
        ]
      }
    },
    "/form/2/{account_id}/{form_id}/aggregation": {
      "get": {
        "tags": [
          "Form"
        ],
        "description": "Get aggregation across page of form grid",
        "summary": "Get aggregation across page of form grid",
        "parameters": [
          {
            "name": "account_id",
            "in": "path",
            "description": "ID of account",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "form_id",
            "in": "path",
            "description": "ID of form",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Get aggregation across page of form grid"
          }
        },
        "security": [
          {
            "X-Api-Key": []
          },
          {
            "X-Access-Key-Id": []
          },
          {
            "X-Access-Key-Secret": []
          }
        ]
      }
    },
    "/form/2/{account_id}/{form_id}/aggregate": {
      "get": {
        "tags": [
          "Form"
        ],
        "description": "Get aggregation result for aggregation field in another service",
        "summary": "Get aggregation result for aggregation field in another service",
        "parameters": [
          {
            "name": "account_id",
            "in": "path",
            "description": "ID of account",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "form_id",
            "in": "path",
            "description": "ID of form",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Get aggregation result for aggregation field in another service"
          }
        },
        "security": [
          {
            "X-Api-Key": []
          },
          {
            "X-Access-Key-Id": []
          },
          {
            "X-Access-Key-Secret": []
          }
        ]
      }
    },
    "/form/2/{account_id}/{form_id}/{instance_id}/lookup": {
      "get": {
        "tags": [
          "Form"
        ],
        "description": "Get instance value for lookup save",
        "summary": "Get instance value for lookup save",
        "parameters": [
          {
            "name": "account_id",
            "in": "path",
            "description": "ID of account",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "form_id",
            "in": "path",
            "description": "ID of form",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "instance_id",
            "in": "path",
            "description": "ID of Record",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Get instance value for lookup save"
          }
        },
        "security": [
          {
            "X-Api-Key": []
          },
          {
            "X-Access-Key-Id": []
          },
          {
            "X-Access-Key-Secret": []
          }
        ]
      }
    },
    "/form/2/{account_id}/{form_id}/update": {
      "patch": {
        "tags": [
          "Form"
        ],
        "description": "Create a new form record or update an existing one",
        "summary": "Create a new form record or update an existing one",
        "parameters": [
          {
            "name": "account_id",
            "in": "path",
            "description": "This is your Kissflow <<glossary:Account ID>>",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "form_id",
            "in": "path",
            "description": "The <<glossary:Form ID>> is a unique identifier for each form",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Request payload to create/update form record <br /> Name - `Key` column value of the form. It is a unique string that identifies the record you are trying to insert/update in the form. It is a mandatory parameter<br /> Field1 - Value to be added/updated in the `Field1` column in the form",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "Name": {
                    "type": "string"
                  },
                  "Field1": {
                    "type": "string"
                  }
                },
                "example": {
                  "Name": 10,
                  "Field1": "Blackwidow"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Created/updated form successfully"
          }
        },
        "security": [
          {
            "X-Api-Key": []
          },
          {
            "X-Access-Key-Id": []
          },
          {
            "X-Access-Key-Secret": []
          }
        ]
      }
    },
    "/form/2/{account_id}/{form_id}/{row_id}/{field_id}/attachment/{attachment_id}": {
      "get": {
        "tags": [
          "Form"
        ],
        "description": "This endpoint lets you download a specific attachment file from a field in a row of your form.",
        "summary": "Download attachment from form",
        "parameters": [
          {
            "name": "account_id",
            "in": "path",
            "description": "This is your Kissflow <<glossary:Account ID>>, and is a mandatory parameter.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "form_id",
            "in": "path",
            "description": "The <<glossary:Form ID>> is a unique identifyer for each form, and is a mandatory parameter.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "row_id",
            "in": "path",
            "description": "The <<glossary:Row ID>> is a unique identifyer for each row, and is a mandatory parameter.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "field_id",
            "in": "path",
            "description": "The <<glossary:Field ID>> is a unique identifyer for each field, and is a mandatory parameter.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "attachment_id",
            "in": "path",
            "description": "This is the unique <<glossary:Attachment ID>> of your attached file.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "This request successfully downloads a specific attachment from your form field.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              }
            }
          },
          "403": {
            "description": "The request to download a specific attachment from a form field could not be processed due to insufficient permissions.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DefaultErrorSchema"
                }
              }
            }
          }
        },
        "security": [
          {
            "X-Api-Key": []
          },
          {
            "X-Access-Key-Id": []
          },
          {
            "X-Access-Key-Secret": []
          }
        ]
      }
    },
    "/form/2/{account_id}/{form_id}/allfields": {
      "get": {
        "tags": [
          "Form"
        ],
        "description": "List all Fields in a Model Exclude Child",
        "summary": "List all Fields in a Model Exclude Child",
        "parameters": [
          {
            "name": "account_id",
            "in": "path",
            "description": "ID of account",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "form_id",
            "in": "path",
            "description": "ID of a form whose field needed",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "List all Fields in a Model Exclude Child",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Field"
                }
              }
            }
          }
        },
        "security": [
          {
            "X-Api-Key": []
          },
          {
            "X-Access-Key-Id": []
          },
          {
            "X-Access-Key-Secret": []
          }
        ]
      }
    },
    "/form/2/{account_id}/{form_id}/{instance_id}/{table_id}/{table_instance_id}/{field_id}/lookup": {
      "get": {
        "tags": [
          "Form"
        ],
        "description": "Lookup Data for a reference field in Child",
        "summary": "Lookup Data for a reference field in Child",
        "parameters": [
          {
            "name": "account_id",
            "in": "path",
            "description": "ID of account",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "form_id",
            "in": "path",
            "description": "ID of a form",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "instance_id",
            "in": "path",
            "description": "ID of parent Instance from which lookup data called",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "table_id",
            "in": "path",
            "description": "ID of a child model whose field is reference",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "table_instance_id",
            "in": "path",
            "description": "ID of child Instance calls lookup data",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "field_id",
            "in": "path",
            "description": "ID of field needs lookup data",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "page_number",
            "in": "query",
            "description": "This is the specific page number of an item list. The page number can be specified as 1, 2, 3, etc.",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "page_size",
            "in": "query",
            "description": "The number of items that can be listed in a page. It can be assigned any integer.",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "q",
            "in": "query",
            "description": "The search filter string",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Lookup Data for a reference field in Child",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LookupResponseOfAInstance"
                }
              }
            }
          }
        },
        "security": [
          {
            "X-Api-Key": []
          },
          {
            "X-Access-Key-Id": []
          },
          {
            "X-Access-Key-Secret": []
          }
        ]
      }
    },
    "/form/2/{account_id}/{form_id}/view/{view_id}/list": {
      "get": {
        "tags": [
          "FormView"
        ],
        "description": "This endpoint lets you retrieve all the items of a view.",
        "summary": "Get form records",
        "parameters": [
          {
            "name": "account_id",
            "in": "path",
            "description": "This is your Kissflow <<glossary:Account ID>>, and is a mandatory parameter.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "form_id",
            "in": "path",
            "description": "Your Kissflow Form id. This is a mandatory parameter.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "view_id",
            "in": "path",
            "description": "Your Kissflow View id. This is a mandatory parameter.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "This request retrieves all the items of a specified form view flow.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GRIDDataResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "X-Api-Key": []
          },
          {
            "X-Access-Key-Id": []
          },
          {
            "X-Access-Key-Secret": []
          }
        ]
      }
    },
    "/form/2/{account_id}/{form_id}/view/{view_id}/preview": {
      "post": {
        "tags": [
          "FormView"
        ],
        "description": "This endpoint lets you preview all the items of a view.",
        "summary": "Get form records",
        "parameters": [
          {
            "name": "account_id",
            "in": "path",
            "description": "This is your Kissflow <<glossary:Account ID>>, and is a mandatory parameter.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "form_id",
            "in": "path",
            "description": "Your Kissflow Form id. This is a mandatory parameter.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "view_id",
            "in": "path",
            "description": "Your Kissflow View id. This is a mandatory parameter.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "This request lets you preview all the items of a specified form view flow.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GRIDDataResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "X-Api-Key": []
          },
          {
            "X-Access-Key-Id": []
          },
          {
            "X-Access-Key-Secret": []
          }
        ]
      }
    },
    "/form/2/{account_id}/{form_id}/view/{view_id}/fields": {
      "get": {
        "tags": [
          "FormView"
        ],
        "description": "This endpoint lets you retrieve all the fields in a form view flow.",
        "summary": "Retrieve all fields",
        "parameters": [
          {
            "name": "account_id",
            "in": "path",
            "description": "This is your Kissflow <<glossary:Account ID>>, and is a mandatory parameter.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "form_id",
            "in": "path",
            "description": "Your Kissflow Form id. This is a mandatory parameter.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "view_id",
            "in": "path",
            "description": "Your Kissflow View id. This is a mandatory parameter.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "List all the fields in a form view flow.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Field"
                }
              }
            }
          }
        },
        "security": [
          {
            "X-Api-Key": []
          },
          {
            "X-Access-Key-Id": []
          },
          {
            "X-Access-Key-Secret": []
          }
        ]
      }
    },
    "/form/2/{account_id}/{form_id}/view/{view_id}/count": {
      "get": {
        "tags": [
          "FormView"
        ],
        "description": "This endpoint lets you retrieve count of form items in the form view",
        "summary": "Retrieve the number of form view items",
        "parameters": [
          {
            "name": "account_id",
            "in": "path",
            "description": "Your Kissflow <<glossary:Account ID>>. This is a mandatory parameter.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "form_id",
            "in": "path",
            "description": "Your Kissflow Form id. This is a mandatory parameter.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "view_id",
            "in": "path",
            "description": "Your unique view id. This is a mandatory parameter.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "This request retrieves the count of items in the form view",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "count": {
                      "type": "integer",
                      "description": "Total count of items in the form view"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "The specified item could not be found.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DefaultErrorSchema"
                }
              }
            }
          }
        },
        "security": [
          {
            "X-Api-Key": []
          },
          {
            "X-Access-Key-Id": []
          },
          {
            "X-Access-Key-Secret": []
          }
        ]
      }
    },
    "/form/2/{account_id}/{form_id}/view/{view_id}/lookup/fields": {
      "get": {
        "tags": [
          "Form"
        ],
        "description": "Get Field list of form",
        "summary": "Get Field list of form",
        "parameters": [
          {
            "name": "account_id",
            "in": "path",
            "description": "ID of account",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "form_id",
            "in": "path",
            "description": "ID of form",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "view_id",
            "in": "path",
            "description": "ID of form",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "List Field in form",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Field"
                }
              }
            }
          }
        },
        "security": [
          {
            "X-Api-Key": []
          },
          {
            "X-Access-Key-Id": []
          },
          {
            "X-Access-Key-Secret": []
          }
        ]
      }
    },
    "/form/2/{account_id}/{form_id}/view/{view_id}/aggregation": {
      "get": {
        "tags": [
          "FormView"
        ],
        "description": "Get aggregation across page of view grid",
        "summary": "Get aggregation across page",
        "parameters": [
          {
            "name": "account_id",
            "in": "path",
            "description": "ID of account",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "form_id",
            "in": "path",
            "description": "ID of form",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "view_id",
            "in": "path",
            "description": "ID of form view",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Get aggregation across page of view grid"
          }
        },
        "security": [
          {
            "X-Api-Key": []
          },
          {
            "X-Access-Key-Id": []
          },
          {
            "X-Access-Key-Secret": []
          }
        ]
      }
    },
    "/form/2/{account_id}/{form_id}/view/{view_id}/{instance_id}/{field_id}/lookup": {
      "get": {
        "tags": [
          "FormView"
        ],
        "description": "Lookup Data for a reference field",
        "summary": "Lookup Data for a reference field",
        "parameters": [
          {
            "name": "account_id",
            "in": "path",
            "description": "ID of account",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "form_id",
            "in": "path",
            "description": "ID of form",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "view_id",
            "in": "path",
            "description": "ID of form or view",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "instance_id",
            "in": "path",
            "description": "Instance ID for the specific form or view",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "field_id",
            "in": "path",
            "description": "ID of field needs lookup data",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "q",
            "in": "query",
            "description": "The search filter string",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Lookup Data for a reference field",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LookupResponseOfAInstance"
                }
              }
            }
          }
        },
        "security": [
          {
            "X-Api-Key": []
          },
          {
            "X-Access-Key-Id": []
          },
          {
            "X-Access-Key-Secret": []
          }
        ]
      }
    },
    "/form/2/{account_id}/{form_id}/view/{view_id}/lookup": {
      "post": {
        "tags": [
          "FormView"
        ],
        "description": "Lookup data from other services",
        "summary": "Lookup data from other services",
        "parameters": [
          {
            "name": "account_id",
            "in": "path",
            "description": "ID of account",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "form_id",
            "in": "path",
            "description": "ID of form",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "view_id",
            "in": "path",
            "description": "ID of form view",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Lookup aggregation intermediate datastruct",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/QueryDefinitionIntermediateDataStructure"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Lookup data from other services",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LookupResponseOfAInstance"
                }
              }
            }
          }
        },
        "security": [
          {
            "X-Api-Key": []
          },
          {
            "X-Access-Key-Id": []
          },
          {
            "X-Access-Key-Secret": []
          }
        ]
      }
    },
    "/form/2/{account_id}/{form_id}/view/{view_id}/{instance_id}/lookup": {
      "get": {
        "tags": [
          "FormView"
        ],
        "description": "Get instance value for lookup save",
        "summary": "Get instance value for lookup save",
        "parameters": [
          {
            "name": "account_id",
            "in": "path",
            "description": "ID of account",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "form_id",
            "in": "path",
            "description": "ID of form",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "view_id",
            "in": "path",
            "description": "ID of form view",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "instance_id",
            "in": "path",
            "description": "ID of a record",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Get instance value for lookup save"
          }
        },
        "security": [
          {
            "X-Api-Key": []
          },
          {
            "X-Access-Key-Id": []
          },
          {
            "X-Access-Key-Secret": []
          }
        ]
      }
    },
    "/form/2/{account_id}/{form_id}/view/{view_id}/row/{row_id}": {
      "get": {
        "tags": [
          "FormView"
        ],
        "description": "Get an existing form view record",
        "summary": "Get an existing form view record",
        "parameters": [
          {
            "name": "account_id",
            "in": "path",
            "description": "This is your Kissflow <<glossary:Account ID>>",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "form_id",
            "in": "path",
            "description": "The <<glossary:Form ID>> is a unique identifier for each form, and is a mandatory parameter.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "view_id",
            "in": "path",
            "description": "The <<glossary:FormView ID>> is a unique identifier for each view in form, and is a mandatory parameter.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "row_id",
            "in": "path",
            "description": "Unique row id value for the form rows",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Get Instance by the instance row id"
          }
        },
        "security": [
          {
            "X-Api-Key": []
          },
          {
            "X-Access-Key-Id": []
          },
          {
            "X-Access-Key-Secret": []
          }
        ]
      }
    },
    "/form/2/{account_id}/{form_id}/view/{view_id}/aggregate": {
      "get": {
        "tags": [
          "FormView"
        ],
        "description": "Get aggregation result for aggregation field in another service",
        "summary": "Get aggregation result for aggregation field in another service",
        "parameters": [
          {
            "name": "account_id",
            "in": "path",
            "description": "ID of account",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "form_id",
            "in": "path",
            "description": "ID of form",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "view_id",
            "in": "path",
            "description": "ID of form view",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Get aggregation result for aggregation field in another service"
          }
        },
        "security": [
          {
            "X-Api-Key": []
          },
          {
            "X-Access-Key-Id": []
          },
          {
            "X-Access-Key-Secret": []
          }
        ]
      }
    },
    "/form/2/{account_id}/{form_id}/view/{view_id}/{row_id}/{field_id}/attachment": {
      "post": {
        "tags": [
          "FormView"
        ],
        "description": "This endpoint lets you upload file to an attachment field in row.",
        "summary": "Add attachment",
        "parameters": [
          {
            "name": "account_id",
            "in": "path",
            "description": "This is your Kissflow <<glossary:Account ID>>, and is a mandatory parameter.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "form_id",
            "in": "path",
            "description": "The <<glossary:Form ID>> is a unique identifyer for each form, and is a mandatory parameter.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "view_id",
            "in": "path",
            "description": "The <<glossary:FormView ID>> is a unique identifyer for each view in form, and is a mandatory parameter.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "row_id",
            "in": "path",
            "description": "The <<glossary:Row ID>> is a unique identifyer for each row, and is a mandatory parameter.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "field_id",
            "in": "path",
            "description": "The <<glossary:Field ID>> is a unique identifyer for each field, and is a mandatory parameter.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "The file to upload.",
          "required": true,
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "string",
                "format": "binary"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "This request successfully adds a new attachment to your form field.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BatchUpdateResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "X-Api-Key": []
          },
          {
            "X-Access-Key-Id": []
          },
          {
            "X-Access-Key-Secret": []
          }
        ]
      }
    },
    "/form/2/{account_id}/{form_id}/view/{view_id}/{row_id}/{field_id}/image": {
      "post": {
        "tags": [
          "FormView"
        ],
        "description": "This endpoint lets you upload image to field in row.",
        "summary": "Add image file",
        "parameters": [
          {
            "name": "account_id",
            "in": "path",
            "description": "This is your Kissflow <<glossary:Account ID>>, and is a mandatory parameter.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "form_id",
            "in": "path",
            "description": "The <<glossary:Form ID>> is a unique identifyer for each form, and is a mandatory parameter.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "view_id",
            "in": "path",
            "description": "The <<glossary:FormView ID>> is a unique identifyer for each view in form, and is a mandatory parameter.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "row_id",
            "in": "path",
            "description": "The <<glossary:Row ID>> is a unique identifyer for each row, and is a mandatory parameter.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "field_id",
            "in": "path",
            "description": "The <<glossary:Field ID>> is a unique identifyer for each field, and is a mandatory parameter.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "The file to upload.",
          "required": true,
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "string",
                "format": "binary"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "This request successfully adds a new image file to your form field.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BatchUpdateResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "X-Api-Key": []
          },
          {
            "X-Access-Key-Id": []
          },
          {
            "X-Access-Key-Secret": []
          }
        ]
      },
      "get": {
        "tags": [
          "FormView"
        ],
        "description": "This endpoint lets you download an image from a field in your form view.",
        "summary": "Download image from form view",
        "parameters": [
          {
            "name": "account_id",
            "in": "path",
            "description": "This is your Kissflow <<glossary:Account ID>>, and is a mandatory parameter.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "form_id",
            "in": "path",
            "description": "The <<glossary:Form ID>> is a unique identifyer for each form, and is a mandatory parameter.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "view_id",
            "in": "path",
            "description": "The <<glossary:FormView ID>> is a unique identifyer for each view in form, and is a mandatory parameter.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "row_id",
            "in": "path",
            "description": "The <<glossary:Row ID>> is a unique identifyer for each row, and is a mandatory parameter.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "field_id",
            "in": "path",
            "description": "The <<glossary:Field ID>> is a unique identifyer for each field, and is a mandatory parameter.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "This request successfully downloads an image from a field in your form view.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              }
            }
          },
          "403": {
            "description": "The request to download an image from a field in your form view could not be processed due to insufficient permissions.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DefaultErrorSchema"
                }
              }
            }
          }
        },
        "security": [
          {
            "X-Api-Key": []
          },
          {
            "X-Access-Key-Id": []
          },
          {
            "X-Access-Key-Secret": []
          }
        ]
      }
    },
    "/form/2/{account_id}/{form_id}/view/{view_id}/{row_id}/{field_id}/attachment/{attachment_id}": {
      "get": {
        "tags": [
          "FormView"
        ],
        "description": "This endpoint lets you download a specific attachment file from a field in your form view.",
        "summary": "Download attachment from form view",
        "parameters": [
          {
            "name": "account_id",
            "in": "path",
            "description": "This is your Kissflow <<glossary:Account ID>>, and is a mandatory parameter.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "form_id",
            "in": "path",
            "description": "The <<glossary:Form ID>> is a unique identifyer for each form, and is a mandatory parameter.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "view_id",
            "in": "path",
            "description": "The <<glossary:FormView ID>> is a unique identifyer for each view in form, and is a mandatory parameter.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "row_id",
            "in": "path",
            "description": "The <<glossary:Row ID>> is a unique identifyer for each row, and is a mandatory parameter.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "field_id",
            "in": "path",
            "description": "The <<glossary:Field ID>> is a unique identifyer for each field, and is a mandatory parameter.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "attachment_id",
            "in": "path",
            "description": "This is the unique <<glossary:Attachment ID>> of your attached file.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "This request successfully downloads a specific attachment file from a field in your form view.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              }
            }
          },
          "403": {
            "description": "The request to download a specific attachment from a field in your form view could not be processed due to insufficient permissions.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DefaultErrorSchema"
                }
              }
            }
          }
        },
        "security": [
          {
            "X-Api-Key": []
          },
          {
            "X-Access-Key-Id": []
          },
          {
            "X-Access-Key-Secret": []
          }
        ]
      }
    },
    "/form/2/{account_id}/{form_id}/view/{view_id}/field/{field_id}/values": {
      "get": {
        "tags": [
          "FormView"
        ],
        "description": "List possible values for the specified field",
        "summary": "List possible values for the specified field",
        "parameters": [
          {
            "name": "account_id",
            "in": "path",
            "description": "ID of account",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "form_id",
            "in": "path",
            "description": "ID of form",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "view_id",
            "in": "path",
            "description": "ID of a form view",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "field_id",
            "in": "path",
            "description": "Field for which value to be retrieved",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "List value for the specified Field",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ListValueofField"
                }
              }
            }
          },
          "404": {
            "description": "Specified field is not found.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DefaultErrorSchema"
                }
              }
            }
          }
        },
        "security": [
          {
            "X-Api-Key": []
          },
          {
            "X-Access-Key-Id": []
          },
          {
            "X-Access-Key-Secret": []
          }
        ]
      }
    },
    "/form/2/{account_id}/{form_id}/view/{view_id}/batch": {
      "post": {
        "tags": [
          "FormView"
        ],
        "description": "Batch Update of Form Records",
        "summary": "Batch Update of Form Records",
        "parameters": [
          {
            "name": "account_id",
            "in": "path",
            "description": "ID of account",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "form_id",
            "in": "path",
            "description": "ID of form",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "view_id",
            "in": "path",
            "description": "ID of form view",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Post body with data to update on view",
          "required": true,
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/UpdateDictOfAInstance"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "form view rows updated",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/UpdateDictOfAInstance"
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "X-Api-Key": []
          },
          {
            "X-Access-Key-Id": []
          },
          {
            "X-Access-Key-Secret": []
          }
        ]
      }
    },
    "/form/2/{account_id}/{form_id}/view/{view_id}/param": {}
  },
  "info": {
    "title": "Form Management Apis ",
    "version": "2.0.0",
    "description": "Documentation for Forms and FormView Management APIs"
  },
  "tags": [
    {
      "name": "Data Form",
      "description": "Create and manage Forms in Kissflow using these API endpoints.",
      "externalDocs": {
        "description": "Find out more",
        "url": "https://kissflow.com"
      }
    },
    {
      "name": "Data Form View",
      "description": "Manage FormView in Kissflow using these API endpoints",
      "externalDocs": {
        "description": "Find out more",
        "url": "https://kissflow.com"
      }
    }
  ],
  "openapi": "3.0.3",
  "components": {
    "schemas": {
      "DefaultErrorSchema": {
        "type": "object",
        "properties": {
          "args": {
            "type": "object"
          },
          "error_code": {
            "type": "string"
          },
          "en_message": {
            "type": "string"
          },
          "_id": {
            "type": "string"
          },
          "message": {
            "type": "string"
          }
        },
        "required": [
          "_id",
          "error_code"
        ]
      },
      "Field": {
        "type": "object",
        "properties": {
          "Type": {
            "type": "string"
          },
          "Name": {
            "type": "string"
          },
          "IsSystemField": {
            "type": "boolean"
          },
          "Id": {
            "type": "string"
          }
        }
      },
      "System": {
        "type": "object",
        "properties": {
          "_id": {
            "type": "string"
          },
          "Name": {
            "type": "string"
          }
        },
        "required": [
          "_id"
        ]
      },
      "UpdateDictOfAInstance": {
        "type": "object",
        "properties": {
          "TotalPrice": {
            "type": "string"
          },
          "PONumber": {
            "type": "string"
          },
          "_id": {
            "type": "string"
          },
          "RequestedBy": {
            "$ref": "#/components/schemas/System"
          },
          "Name": {
            "type": "string"
          }
        },
        "required": [
          "Name",
          "_id"
        ]
      },
      "BatchUpdate": {
        "type": "object",
        "properties": {
          "response": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/UpdateDictOfAInstance"
            }
          }
        }
      },
      "GRIDDataResponse": {
        "type": "object",
        "properties": {
          "Filter": {
            "type": "object"
          },
          "Table_TableName": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/BatchUpdate"
            }
          },
          "Columns": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Field"
            }
          }
        }
      },
      "GetItem": {
        "type": "object",
        "properties": {
          "_created_by": {
            "$ref": "#/components/schemas/System"
          },
          "_modified_at": {
            "type": "string",
            "format": "date-time"
          },
          "_visited": {
            "type": "boolean"
          },
          "_created_at": {
            "type": "string",
            "format": "date-time"
          },
          "_modified_by": {
            "$ref": "#/components/schemas/System"
          },
          "_id": {
            "type": "string"
          },
          "_flow_name": {
            "type": "string"
          },
          "Name": {
            "type": "string"
          }
        }
      },
      "LookupResponseOfAInstance": {
        "type": "object",
        "properties": {
          "TotalPrice": {
            "type": "string"
          },
          "PONumber": {
            "type": "string"
          },
          "_id": {
            "type": "string"
          },
          "RequestedBy": {
            "$ref": "#/components/schemas/System"
          },
          "Name": {
            "type": "string"
          }
        }
      },
      "UpdateDictOfAInstanceResponse": {
        "type": "object",
        "properties": {
          "TotalPrice": {
            "type": "string"
          },
          "_modified_at": {
            "type": "string",
            "format": "date-time"
          },
          "PONumber": {
            "type": "string"
          },
          "_id": {
            "type": "string"
          },
          "RequestedBy": {
            "$ref": "#/components/schemas/System"
          },
          "_modified_by": {
            "$ref": "#/components/schemas/System"
          },
          "Name": {
            "type": "string"
          }
        },
        "required": [
          "Name",
          "_id"
        ]
      },
      "BatchUpdateResponse": {
        "type": "object",
        "properties": {
          "response": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/UpdateDictOfAInstanceResponse"
            }
          }
        }
      },
      "ListValueofField": {
        "type": "object",
        "properties": {
          "_id": {
            "type": "string"
          },
          "Name": {
            "type": "string"
          }
        },
        "required": [
          "_id"
        ]
      },
      "QueryDefinitionIntermediateDataStructure": {
        "type": "object",
        "properties": {}
      }
    },
    "securitySchemes": {
      "X-Api-Key": {
        "type": "apiKey",
        "name": "X-Api-Key",
        "in": "header"
      },
      "X-Access-Key-Id": {
        "type": "apiKey",
        "name": "X-Access-Key-Id",
        "in": "header"
      },
      "X-Access-Key-Secret": {
        "type": "apiKey",
        "name": "X-Access-Key-Secret",
        "in": "header"
      }
    }
  }
}